name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME_JAIME }}
        password: ${{ secrets.DOCKER_PASSWORD_JAIME }}

    - name: Build and push Docker image
      run: |
        docker build -t jaimehenao8126/monitor-argocd:latest .
        docker push jaimehenao8126/monitor-argocd:latest

  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Install ngrok
        run: |
          curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null
          echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list
          sudo apt update && sudo apt install ngrok

      - name: Authenticate ngrok
        env:
          NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
        run: ngrok config add-authtoken $NGROK_AUTH_TOKEN

      - name: Start ngrok tunnel
        run: ngrok http 8443 > /dev/null &
      
      - name: Get ngrok public URL
        run: |
          sleep 5
          curl -s http://127.0.0.1:4040/api/tunnels | jq -r '.tunnels[0].public_url' > ngrok_url.txt
        id: ngrok

      - name: Configure kubeconfig
        run: |
          NGROK_URL=$(cat ngrok_url.txt)
          kubectl config set-cluster minikube --server=$NGROK_URL
          kubectl config set-credentials minikube --token=$MINIKUBE_TOKEN
          kubectl config set-context minikube --cluster=minikube --user=minikube
          kubectl config use-context minikube

      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME_JAIME }}/monitor-argocd:latest .

      - name: Push Docker image
        run: |
          echo ${{ secrets.DOCKER_PASSWORD_JAIME }} | docker login -u ${{ secrets.DOCKER_USERNAME_JAIME }} --password-stdin
          docker push ${{ secrets.DOCKER_USERNAME_JAIME }}/monitor-argocd:latest

      - name: Deploy with Helm
        run: helm upgrade --install monitor-argocd charts/monitor-argocd --namespace poc --create-namespace