{{- if .Values.cronjob.enabled }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: monitor-argocd
  namespace: {{ .Release.Namespace }}
  labels:
    app: monitor-argocd
spec:
  schedule: "{{ .Values.cronjob.schedule }}"
  concurrencyPolicy: "{{ .Values.cronjob.concurrencyPolicy }}"
  successfulJobsHistoryLimit: {{ .Values.cronjob.successfulJobsHistoryLimit }}
  failedJobsHistoryLimit: {{ .Values.cronjob.failedJobsHistoryLimit }}
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: monitor-argocd
            image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
            imagePullPolicy: "{{ .Values.image.pullPolicy }}"
            env:
            - name: SLACK_WEBHOOK_URL
              valueFrom:
                configMapKeyRef:
                  name: monitor-argocd-config
                  key: SLACK_WEBHOOK_URL
            - name: ARGOCD_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: monitor-argocd-config
                  key: ARGOCD_USERNAME
            - name: ARGOCD_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: monitor-argocd-config
                  key: ARGOCD_PASSWORD
            - name: ARGOCD_SERVER
              valueFrom:
                configMapKeyRef:
                  name: monitor-argocd-config
                  key: ARGOCD_SERVER
          restartPolicy: "{{ .Values.cronjob.restartPolicy }}"
          resources:
            limits:
              cpu: "{{ .Values.resources.limits.cpu }}"
              memory: "{{ .Values.resources.limits.memory }}"
            requests:
              cpu: "{{ .Values.resources.requests.cpu }}"
              memory: "{{ .Values.resources.requests.memory }}"
      backoffLimit: 4
{{- end }}